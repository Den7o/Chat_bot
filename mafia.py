from operator import rshift
import telebot
from telebot import types
from config import TOKEN
import random
import time

bot = telebot.TeleBot(token=TOKEN)
players = {}



@bot.message_handler(commands=['game'])
def game_start(message):
    if message.chat.type == "private":
        markup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton('‚úÖ–ì–æ—Ç–æ–≤–æ', callback_data='ready')
        markup.add(button1)
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É!", reply_markup=markup)
    else:
        markup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton('üé≤ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è!', callback_data='join', url='https://t.me/thebest_chat_bot')
        markup.add(button1)
        place = message.chat
        bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.json['from']['username']} –Ω–∞—á–∞–ª –∏–≥—Ä—É!\n\n–ß–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –≤ –∏–≥—Ä—É –≤–≤–µ–¥–∏—Ç–µ /join!", reply_markup=markup)
        
        @bot.message_handler(commands=['start'])
        def join(message):
            if message.from_user.id not in players.keys() and message.from_user.first_name not in players.values():
                if len(players) >= 10:
                    bot.send_message(message.from_user.id, "–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç —É–∂–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å")

                else:
                    players[message.from_user.id] = message.from_user.first_name
                    bot.send_message(message.from_user.id, f"–í—ã –∑–∞—à–ª–∏ —Å {place.title}")
                    send_message = bot.send_message(place.id, f"–ù–∞–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤...\n\n–û—Å—Ç–∞–ª–æ—Å—å: {10-len(players)} –∏–≥—Ä–æ–∫–æ–≤")
                    # bot.edit_message_text(f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–æ—Å—å: \n\n{players}\n\n–û—Å—Ç–∞–ª–æ—Å—å:{10-len(players)}", chat_id=message.chat.id, message_id=send_message.message_id)
            else:
                bot.send_message(message.from_user.id, "–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!")

            if len(players) >= 10:
                bot.send_message(place.id, "Game START!")
                for num in range(10):
                    bot.send_message(tuple(players.items())[num][0], "–ò–≥—Ä–∞ –ù–∞—á–∞–ª–∞—Å—å!\n\nüçÄ–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ 10 —Å–µ–∫—É–Ω–¥!")
                time.sleep(10)
                num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                citizens = ['citizen1', 'citizen2', 'citizen3', 'citizen4', 'citizen5', 'citizen6', 'citizen7']
                random1 = random.choice(num)
                random2 = random.choice(num)
                random3 = random.choice(num)
                for key,value in players.items():
                    for citizen in citizens:
                        if random1 == 5:
                            num.remove(random1)
                            mafia = bot.send_message(key, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ú–∞—Ñ–∏—è!\n –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –∏ —É–¥–∞—á–∏ –≤ –∏–≥—Ä–µ!")
                            mafia = {
                                "id": key,
                                "name": value,
                                "status": "alive"}
                        elif random2 == 3:
                            num.remove(random2)
                            police = bot.send_message(key, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã —à–µ—Ä–∏—Ñ!\n –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∏ –Ω–∞–π–¥–∏—Ç–µ –º–∞—Ñ–∏—é!")
                            police = {
                                "id": key,
                                "name": value,
                                "status": "alive"}
                        elif random3 == 9:
                            num.remove(random3)
                            doctor = bot.send_message(key, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –¥–æ–∫—Ç–æ—Ä!\n –í—ã —Å–º–æ–∂–µ—Ç–µ –ª–µ—á–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö –æ—Ç –º–∞—Ñ–∏–∏!")
                            doctor = {
                                "id": key,   
                                "name": value,
                                "status": "alive"}
                        else:
                            bot.send_message(key, "–í—ã –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å!\n–ù–µ—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–≤–µ–∑–µ—Ç")
                            citizen = {
                                "id": key,
                                "name": value,
                                "status": "alive"
                            }

                    for num2 in range(10):
                        bot.send_message(tuple(players.items())[num2][0], "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º –≤–≤–µ–¥–∏—Ç–µ –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ!")
                while True:
                    status = 'Day'
                    @bot.message_handler()
                    def chat(message):
                        if status == 'Day':
                            for text in range(10):
                                bot.send_message(tuple(players.items)[text][0], f"[{message.from_user.first_name}]\n{message.text}")
                        else:
                            bot.send_message(message.from_user.id, "–¢–∏—à–µ!\n–¢–µ–±—è –º–æ–∂–µ—Ç —É—Å–ª—ã—à–∞—Ç—å –º–∞—Ñ–∏—è!")
                    time.sleep(50)
                    for num in range(10):
                        bot.send_message(tuple(players.items())[num][0], "--–í–µ–¥—É—â–∏–π--\n–û—Å—Ç–∞–ª–æ—Å—å 50 —Å–µ–∫—É–Ω–¥ –¥–æ –Ω–∞—á–∞–ª–∞ –Ω–æ—á–∏!")
                    time.sleep(50)
                    for num in range(10):
                        bot.send_message(tuple(players.items())[num][0], "--–í–µ–¥—É—â–∏–π--\n–ì–æ—Ä–æ–¥ –∑–∞—Å—ã–ø–∞–µ—Ç, –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—å—Å—è –º–∞—Ñ–∏—è")
                    markup = types.InlineKeyboardMarkup(row_width=2)
                    button1 = types.InlineKeyboardButton({citizen1['name']}, callback_data='kill1')
                    button2 = types.InlineKeyboardButton({citizen2['name']}, callback_data='kill2')
                    button3 = types.InlineKeyboardButton({doctor['name']}, callback_data='kill3')
                    button4 = types.InlineKeyboardButton({citizen3['name']}, callback_data='kill4')
                    button5 = types.InlineKeyboardButton({citizen4['name']}, callback_data='kill5')
                    button6 = types.InlineKeyboardButton({citizen5['name']}, callback_data='kill6')
                    button7 = types.InlineKeyboardButton({citizen6['name']}, callback_data='kill7')
                    button8 = types.InlineKeyboardButton({police['name']}, callback_data='kill8')
                    button9 = types.InlineKeyboardButton({citizen7['name']}, callback_data='kill9')
                    markup.add(button1, button2, button3, button4, button5, button6, button7, button8, button9)
                    bot.send_message(mafia['id'], "–ù–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å, –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–±–∏—Ç—å?", reply_markup=markup)
                    @bot.callback_query_handler(func=lambda call: True)
                    def killed_players(message):
                        player_list = {'kill1': citizen1, 'kill2': citizen2, 'kill3': doctor, 'kill4': citizen3, 'kill5':
                        citizen4, 'kill6': citizen5, 'kill7': citizen6, 'kill8': police, 'kill9': citizen7}
                        for command, data in player_list.items():
                            if message.data == command:
                                data['status'] = 'die'
                                bot.send_message(data['id'], "–£–ø—Å...\n–í–∞—Å —É–±–∏–ª–∞ –º–∞—Ñ–∏—è!")
                                
                            
                            
                                    





@bot.callback_query_handler(func=lambda call: True)
def callback_inline(message):
    if message.data == 'ready':
        bot.edit_message_text(chat_id=message.message.chat.id, text = "–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞!", message_id=message.message.message_id, reply_markup=None)







bot.polling(none_stop=True)




   



















