import telebot
from telebot import types
from telebot.async_telebot import AsyncTeleBot
from config import TOKEN
import my_redis
import random
import asyncio
import time

"""-------–ó–∞–º–µ—Ç–∫–∏--------"""
"""–ü–æ—á–∏–Ω–∏—Ç—å –±–∞–≥ —Å —á–∞—Ç–æ–º"""



print('–ë–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω!')


bot = AsyncTeleBot(token=TOKEN)
url = 'https://t.me/Testing_0000001_bot'
players_name = ['n', 'b', 'c', 'd']
nums = 4
status=True



async def send_message_for_all(text, markup=None): # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º
    for id in my_redis.get_all_id():
        await bot.send_message(id, text, reply_markup=markup)


async def generate_buttons(role, id, text): #–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫
    markup = types.InlineKeyboardMarkup()
    button_skip = types.InlineKeyboardButton('Skip', callback_data='skip')
    for key, value in my_redis.get_filter_data(role).items(): # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤
        buttons = types.InlineKeyboardButton(value, callback_data=key)
        markup.row(buttons)
    markup.row(button_skip)
    if id:
        await bot.send_message(id, text, reply_markup=markup)
    else:
        await bot.send_message_for_all(text, reply_markup=markup)



@bot.message_handler(commands=['game'])
async def start_game(message):
    chat_location = message.chat
    role_dict = {'skip': 0, 'Mafia': 0, 'Police': 0, 'Citizen1': 0, 'Citizen2': 0, 'Citizen3': 0, 'Citizen4': 0, 'Citizen5': 0, 'Citizen6': 0, 'Citizen7': 0, 'Citizen8': 0}
    id_list = my_redis.get_all_id()
    if message.chat.type == 'private':
        await bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É!")
    else:
        markup = types.InlineKeyboardMarkup()
        button_10 = types.InlineKeyboardButton(10, callback_data='num-10')
        button_5 = types.InlineKeyboardButton(5, callback_data='num-5')
        markup.row(button_5, button_10)

        await bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤:", reply_markup=markup)


        @bot.callback_query_handler(func=lambda call: call.data.startswith('num-'))
        async def get_num_of_players(message):
            if int(message.data.replace('num-', '')) == 10:
                list_of_players = [num for num in range(1, 11)]
                num_of_players = 10
            elif int(message.data.replace('num-', '')) == 5:
                list_of_players = [num for num in range(1, 6)]
                num_of_players = 5
            markup = types.InlineKeyboardMarkup()
            button_join = types.InlineKeyboardButton("üé≤ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è!", url=url)
            markup.row(button_join)

            await bot.edit_message_text(
                chat_id = chat_location.id,
                text = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –Ω–∞—á–∞–ª –∏–≥—Ä—É!\n\n–ß–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –≤ –∏–≥—Ä—É –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É!\n[–í–≤–µ–¥–∏—Ç–µ /join –ø–æ—Å–ª–µ –∑–∞—Ö–æ–¥–∞]",
                message_id = message.message.message_id,
                reply_markup=markup
            )


            @bot.message_handler(commands=['join'])
            async def join_to_game(message):
                global nums
                if message.chat.type == 'private':
                    if message.from_user.first_name not in players_name:
                        if nums >= num_of_players:
                            await bot.send_message(message.from_user.id, "–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å!")
                        else:
                            nums += 1
                            players_name.append(message.from_user.first_name)
                            await bot.send_message(chat_location.id, f'–ù–∞–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤...\n\n–û—Å—Ç–∞–ª–æ—Å—å {num_of_players-nums} –∏–≥—Ä–æ–∫–æ–≤')
                            random_role = random.choice(list_of_players)
                            a = 1

                            """–†–ê–ó–î–ê–ß–ê –†–û–õ–ï–ô"""
                            if random_role == 1: # –ú–∞—Ñ–∏—è
                                list_of_players.remove(random_role)
                                my_redis.enter_data('Mafia', {'name': message.from_user.first_name, 'id': message.from_user.id})
                                await bot.send_message(message.from_user.id, "üé≤ –í–∞—à–∞ —Ä–æ–ª—å - –ú–∞—Ñ–∏—è!")
                            elif random_role == 2: # –ü–æ–ª–∏—Ü–∏—è
                                list_of_players.remove(random_role)
                                my_redis.enter_data('Police', {'name': message.from_user.first_name, 'id': message.from_user.id})
                                await bot.send_message(message.from_user.id, "üé≤ –í–∞—à–∞ —Ä–æ–ª—å - –î–µ—Ç–µ–∫—Ç–∏–≤!")
                            else:
                                list_of_players.remove(random_role)
                                my_redis.enter_data(f'Citizen{a}', {'name': message.from_user.first_name, 'id': message.from_user.id})
                                await bot.send_message(message.from_user.id, "üé≤ –í–∞—à–∞ —Ä–æ–ª—å - –ñ–∏—Ç–µ–ª—å!")
                                a += 1

                    else:
                         await bot.send_message(message.from_user.id, "–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!")
                else:
                    await bot.send_message(message.chat.id, f"{message.from_user.first_name} —Å–ø–µ—Ä–≤–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∞ –ø–æ—Å–ª–µ –≤–≤–µ–¥–∏—Ç–µ /join")

                if nums >= num_of_players:
                    await bot.send_message(chat_location.id, "GAME START!")
                    await send_message_for_all('–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n\n–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º –≤–≤–µ–¥–∏—Ç–µ –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ!')


                    @bot.callback_query_handler(func=lambda call: call.message.text.startswith('–í—ã–±–µ—Ä–∏—Ç–µ'))
                    async def delete_one_player(message):
                        role_list = ['Mafia', 'Police', 'Citizen1', 'Citizen2', 'Citizen3', 'Citizen4', 'Citizen5', 'Citizen6', 'Citizen7', 'Citizen8']
                        if message.data in role_list:
                            my_redis.delete(message.data)
                            await bot.delete_message(message.from_user.id, message.message.message_id)
                        elif message.data == 'skip':
                            await bot.delete_message(message.from_user.id, message.message.message_id)

                    @bot.callback_query_handler(func=lambda call: call.message.text.startswith('--–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ--'))
                    async def vote(message):
                        if message.data in role_dict:
                            await bot.delete_message(message.from_user.id, message.message.message_id)
                            role_dict[message.data] += 1
                            id_list.remove(message.from_user.id)
                            for id in id_list:
                                await bot.send_message(id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≥–æ–ª–æ—Å—É–π—Ç–µ –±—ã—Å—Ç—Ä–µ–µ!')
                            if len(id_list) == 0:
                                max_num = max(role_dict.values())
                                result = {key: value for key, value in role_dict.items() if value == max_num}
                                if len(result) == 1:
                                    final = list(result.keys())
                                    my_redis.delete(final[-1])



                    @bot.message_handler() # –ß–∞—Ç –¥–ª—è –∏–≥—Ä—ã
                    async def chat_for_game(message):
                        if status: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ—á—å/–¥–µ–Ω—å
                            if message.from_user.first_name in my_redis.get_all_name():
                                await send_message_for_all(f"[{message.from_user.first_name}]\n{message.text}")
                            else:
                                await send_message(message.from_user.id, '–ü—Ä–æ—Å—Ç–∏—Ç–µ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –≤—ã —É–º–µ—Ä–ª–∏!')
                        else:
                            await bot.send_message(message.from_user.id, "–¢–∏—à–µ!\n–¢–µ–±—è –º–æ–∂–µ—Ç —É—Å–ª—ã—à–∞—Ç—å –º–∞—Ñ–∏—è!")




                    while True:
                        status = True
                        await time.sleep(20)
                        await send_message_for_all( "--–í–µ–¥—É—â–∏–π--\n–û—Å—Ç–∞–ª–æ—Å—å 50 —Å–µ–∫—É–Ω–¥ –¥–æ –Ω–∞—á–∞–ª–∞ –Ω–æ—á–∏!")
                        await time.sleep(50)
                        await send_message_for_all("--–í–µ–¥—É—â–∏–π--\n–ì–æ—Ä–æ–¥ –∑–∞—Å—ã–ø–∞–µ—Ç, –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—å—Å—è –º–∞—Ñ–∏—è")
                        status = False
                        await generate_buttons('Mafia', my_redis.output_data('Mafia', id=True), '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–±–∏—Ç—å\n\n[–î–ª—è —Å–∫–∏–ø–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É Skip]')
                        await send_message_for_all("--–í–µ–¥—É—â–∏–π--\n–ì–æ—Ä–æ–¥ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—å—Å—è, –∑–∞—Å—ã–ø–∞–µ—Ç –º–∞—Ñ–∏—è")
                        await send_message_for_all(f"--–í–µ–¥—É—â–∏–π--\n–û—Å—Ç–∞–ª–æ—Å—å: {len(my_redis.get_len())} –∏–≥—Ä–æ–∫–æ–≤")
                        status = True
                        await generate_buttons('Police', my_redis.output_data('Police', id=True), '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–≥–æ –≤—ã –ø–æ–¥–æ–∑—Ä–∏–≤–∞–µ—Ç–µ\n\n[–î–ª—è —Å–∫–∏–ø–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É Skip]')
                        await generate_buttons('N', id=None, text='--–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ--\n–ö–æ–≥–æ –≤—ã –ø–æ–¥–æ–∑—Ä–∏–≤–∞–µ—Ç–µ?')

                        gamestat = my_redis.get_game_status()
                        if gamestat:
                            await bot.send_message(chat_location.id, '–í —ç—Ç–æ–π –∏–≥—Ä–µ –≤—ã–∏–≥—Ä–∞–ª–∏ –ñ–∏—Ç–µ–ª–∏ –∏ –î–µ—Ç–µ–∫—Ç–∏–≤')
                            my_redis.clear_data() # –û—á–∏—â–∞–µ–º –ë–î
                            break
                        else:
                            await bot.send_message(chat_location.id, '–í —ç—Ç–æ–π –∏–≥—Ä–µ –≤—ã–∏–≥—Ä–∞–ª–∞ –ú–∞—Ñ–∏—è!')
                            my_redis.clear_data() # –û—á–∏—â–∞–µ–º –ë–î
                            break

asyncio.run(bot.polling())